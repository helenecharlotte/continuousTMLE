# Web-appendix-continuous-time-TMLE
* Continuous-time TMLE

** Overview 




** Overview of code

- [[https://github.com/helenecharlotte/continuousTMLE/blob/master/R/contmle.R][contmle.R]]

- [[https://github.com/helenecharlotte/continuousTMLE/blob/master/R/sim.data.continuous.R][sim.data.continuous.R]]

- [[https://github.com/helenecharlotte/continuousTMLE/blob/master/R/cox.super.learner.R][cox.super.learner.R]]


* TMLE for survival analysis

** Simulated data examples

All data contain three continuous covariates, =L_1=, =L_2=, =L_3=, a
binary treatment, =A=, a time-to-event variable, =time=, and an event
indicator, =delta=. 

*** Setting 1

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory  
source("./simulation-contmle/load.R")    
(dt1 <- sim.data2(500, setting=1))   
#+END_SRC

#+RESULTS[<2020-12-05 15:03:14> 576a7ec6735308a272261b1b5632aecc82b1b1e0]:
#+begin_example
      id      time delta A          L1          L2        L3
  1:   1 0.8100002     1 0  0.94261020  0.27985342 0.1031382
  2:   2 1.4502260     0 1 -0.25797067 -0.47395586 0.4651436
  3:   3 0.8296075     1 0  0.06520837 -0.88843887 0.8656481
  4:   4 0.9951963     1 1  0.50515942  0.92833757 0.7473536
  5:   5 0.5157014     0 0  0.75570359  0.49506938 0.3118374
 ---                                                        
496: 496 4.4054541     1 1 -0.43756861  0.29171967 0.7055158
497: 497 1.6474467     1 1  0.75889535 -0.54660755 0.3045856
498: 498 0.5935097     1 0  0.35789923 -0.84041999 0.9514172
499: 499 2.2699648     1 1 -0.35127632 -0.01062143 0.3641394
500: 500 2.6056930     0 1 -0.75344235  0.66964005 0.3897868
#+end_example


*** Setting 2

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory  
source("./simulation-contmle/load.R")    
(dt2 <- sim.data2(500, setting=2))   
#+END_SRC

#+RESULTS[<2020-12-05 15:03:12> 6ccc3e04d4f593be6ea5862fdde32a757cdb9824]:
#+begin_example
      id      time delta A         L1        L2         L3
  1:   1 0.4132532     1 1  0.7061089 0.1952092 0.05819595
  2:   2 0.4642015     1 1 -0.2134748 0.3070825 0.95670351
  3:   3 0.6220027     1 1 -0.9355447 0.9640623 0.31208394
  4:   4 0.9925885     0 0  0.4689362 0.5076957 0.08968828
  5:   5 1.8214260     1 0 -0.2059220 0.5135538 0.92813930
 ---                                                      
496: 496 1.3029924     1 1 -0.7585462 0.6557159 0.65152925
497: 497 0.7232362     1 0  0.3929011 0.6974605 0.87480652
498: 498 0.3991887     1 1 -0.4575361 0.6280713 0.32450182
499: 499 0.1726519     1 1  0.5882465 0.4211234 0.41523119
500: 500 0.8296751     1 0 -0.7846494 0.8117789 0.40373350
#+end_example




** Examples of applying the code to simulated data

*** Target  \(S(\tau)\)

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory  
source("./simulation-contmle/load.R")    
(run1 <- contmle(dt1, #-- dataset
                 treat.effect="ate", #-- target the ate directly
                 tau=0.5, #-- time-point of interest
                 estimation=list("cause1"=list(fit="cox", 
                                               model=Surv(time, delta==1)~A+L1.squared),
                                 "cens"=list(fit="cox",
                                             model=Surv(time, delta==0)~L1+L2+L3+A*L1)                                         
                                 )
                 ))  
#+END_SRC

#+RESULTS[<2020-12-05 15:03:25> ff42a11dfaa8677b06039bba72bf47344d5cce75]:
: $init
:              tau=0.5
: init.est -0.01347265
: init.se   0.02472451
: 
: $tmle
:             tau=0.5
: tmle.est 0.02748492
: tmle.se  0.02472948






*** Target  \(S(\tau)\) simultaneously across multiple time-points

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory  
source("./simulation-contmle/load.R")    
(run2 <- contmle(dt1, #-- dataset
                 treat.effect="ate", #-- target the ate directly
                 tau=c(0.3, 0.5), #-- time-point of interest
                 estimation=list("cause1"=list(fit="cox",  
                                               model=Surv(time, delta==1)~A+L1.squared),
                                 "cens"=list(fit="cox",
                                             model=Surv(time, delta==0)~L1+L2+L3+A*L1)                                         
                                 )
                 ))  
#+END_SRC

#+RESULTS[<2020-12-05 15:04:45> 29d7f21bb9c4043cac4c8e4faefb2b45bbf3ed57]:
: $init
:               tau=0.3     tau=0.5
: init.est -0.005064993 -0.01347265
: init.se   0.015861703  0.02472451
: 
: $tmle
:             tau=0.3    tau=0.5
: tmle.est 0.00265876 0.02741378
: tmle.se  0.01586685 0.02472889








*** Target \(S(\tau)\) and use super learner for initial estimation

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory   
source("./simulation-contmle/load.R")    
(run3 <- contmle(dt1, #-- dataset
                 treat.effect="ate", #-- target the ate directly
                 tau=0.5, #-- time-point of interest
                 estimation=list("cause1"=list(fit="sl", 
                                               model=Surv(time, delta==1)~A+L1.squared),
                                 "cens"=list(fit="sl",
                                             model=Surv(time, delta==0)~L1+L2+L3+A*L1)                                         
                                 ),
                 sl.models=list(
                     mod1=c(Surv(time, delta==1)~A+L1+L2+L3, changepoint=c(0.3, 0.7, 0.9)),
                     mod2=c(Surv(time, delta==1)~A+L2.squared+L1*L2+L3, changepoint=NULL),
                     mod3=c(Surv(time, delta==1)~A+L1.squared+L1*L2+L3, changepoint=c(0.3, 0.7, 0.9)),
                     mod4=c(Surv(time, delta==1)~A+L2.squared, changepoint=c(0.3, 0.7, 0.9)),
                     mod5=c(Surv(time, delta==1)~A+L1.squared, changepoint=c(0.3, 0.7, 0.9)),
                     mod6=c(Surv(time, delta==1)~A+L1.squared+L2+L3, changepoint=c(0.3, 0.7, 0.9)),
                     mod7=c(Surv(time, delta==1)~A+L2.squared, changepoint=NULL),
                     mod8=c(Surv(time, delta==1)~A+L1.squared, changepoint=NULL),
                     mod9=c(Surv(time, delta==1)~A+L1+L2+L3, changepoint=NULL),
                     mod10=c(Surv(time, delta==1)~A*L1+L2+L3, changepoint=NULL),
                     mod11=c(Surv(time, delta==1)~A*L1.squared+L2+L3, changepoint=NULL)
                 )
                 ))  
#+END_SRC

#+RESULTS[<2020-12-05 15:05:06> 634a7ec1f294378134a650f0a8c4143f5745936d]:
#+begin_example
[1] "model picked by cox super learner: mod34"
[1] "model picked by cox super learner: mod34"
$init
            tau=0.5
init.est 0.02229132
init.se  0.02480141

$tmle
            tau=0.5
tmle.est 0.02696983
tmle.se  0.02480234

There were 20 warnings (use warnings() to see them)
#+end_example




* TMLE for competing risks analysis

** Simulated data examples

All data contain three continuous covariates, =L_1=, =L_2=, =L_3=, a
binary treatment, =A=, a time-to-event variable, =time=, and an event
indicator, =delta=.

*** Setting 1

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory  
source("./simulation-contmle/load.R")   
(dt1 <- sim.data2(500, setting=1, competing.risk=TRUE))  
#+END_SRC

#+RESULTS[<2020-12-05 14:19:40> a556e7b288b4d8cf40ec83c6ebe3e04787ee9817]:
#+begin_example
      id      time delta A          L1         L2        L3
  1:   1 0.2874422     1 0  0.30975138 -0.7685858 0.3152207
  2:   2 0.3277389     1 0  0.02027468  0.5996824 0.7876355
  3:   3 0.5929084     1 0 -0.56207753 -0.8157896 0.4990356
  4:   4 0.3566947     2 0 -0.23240904  0.6263003 0.9797428
  5:   5 0.4022813     1 1  0.42003211 -0.5027374 0.8166309
 ---                                                       
496: 496 0.8319554     2 1  0.70791783 -0.7384621 0.1793389
497: 497 0.5464264     2 0  0.33327201  0.5171843 0.1297940
498: 498 0.7545253     2 0 -0.18518105  0.4249485 0.4925814
499: 499 0.5686617     1 1 -0.38356117  0.9970010 0.1349552
500: 500 0.5134096     1 1 -0.11580208  0.3356330 0.3555878
#+end_example


*** Setting 2

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory  
source("./simulation-contmle/load.R")   
(dt2 <- sim.data2(500, setting=2, competing.risk=TRUE))  
#+END_SRC

#+RESULTS[<2020-12-05 14:19:53> 6a70549ab43a0191d9c84d1a23ff8cca8cda6b5f]:
#+begin_example
      id      time delta A          L1        L2        L3
  1:   1 0.5799401     2 1  0.61881053 0.4555461 0.9244269
  2:   2 0.6195841     0 1 -0.05301504 0.9538462 0.5191956
  3:   3 0.3976385     2 0  0.81225760 0.8830862 0.2465510
  4:   4 0.1252781     1 1  0.80605090 0.1536068 0.6741928
  5:   5 0.1745883     1 1  0.95105817 0.6554411 0.9900094
 ---                                                      
496: 496 0.4873752     2 0 -0.01904145 0.8212517 0.8391338
497: 497 0.1826586     0 0 -0.66730849 0.9426368 0.8602731
498: 498 0.6606991     2 1 -0.36369797 0.9727633 0.8323750
499: 499 0.4425950     1 0  0.23650685 0.9604297 0.3021334
500: 500 0.7447092     1 1 -0.66147132 0.2512112 0.5502155
#+end_example


** Examples of applying the code to simulated data 

*** Target \(F_1(\tau) = P(T \le \tau, Delta=1)\)

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory  
source("./simulation-contmle/load.R")   
(run1 <- contmle(dt2, #-- dataset
                 target=1, #-- go after cause 1 specific risk
                 treat.effect="ate", #-- target the ate directly
                 tau=0.5, #-- time-point of interest
                 estimation=list("cause1"=list(fit="cox",
                                               model=Surv(time, delta==1)~A+L1.squared),
                                 "cens"=list(fit="cox",
                                             model=Surv(time, delta==0)~L1+L2+L3+A*L1),
                                 "cause2"=list(fit="cox",
                                               model=Surv(time, delta==2)~A+L1+L2+L3)                                         
                                 )
                 ))  
#+END_SRC

#+RESULTS[<2020-12-05 14:51:32> 7bab19f583be22de436f92964cb6b7dbad849e5c]:
#+begin_example
$init
$init$F1
             tau=0.5
init.est 0.007793466
init.se  0.040004181


$tmle
$tmle$F1
             tau=0.5
tmle.est 0.003432847
tmle.se  0.040002785
#+end_example


*** Target \(F_1(\tau) = P(T \le \tau, Delta=1)\) and \(F_2(\tau) = P(T \le \tau, Delta=2)\) separately

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory  
source("./simulation-contmle/load.R")    
(run2 <- contmle(dt2, #-- dataset
                 target=1:2, #-- go after cause 1 and cause 2 specific risks
                 iterative=TRUE, #-- use iterative tmle to target F1 and F2 separately
                 treat.effect="ate", #-- target the ate directly
                 tau=0.5, #-- time-point of interest
                 estimation=list("cause1"=list(fit="cox",
                                               model=Surv(time, delta==1)~A+L1.squared),
                                 "cens"=list(fit="cox",
                                             model=Surv(time, delta==0)~L1+L2+L3+A*L1),
                                 "cause2"=list(fit="cox",
                                               model=Surv(time, delta==2)~A+L1+L2+L3)                                         
                                 )
                 ))  
#+END_SRC

#+RESULTS[<2020-12-05 14:52:55> dcb3080d93b2881bff3e53de13d0294219f92565]:
#+begin_example
$init
$init$F1
             tau=0.5
init.est 0.007793466
init.se  0.040004181

$init$F2
             tau=0.5
init.est -0.09378281
init.se   0.03692451


$tmle
$tmle$F1
             tau=0.5
tmle.est 0.003432847
tmle.se  0.040002785

$tmle$F2
             tau=0.5
tmle.est -0.08613062
tmle.se   0.03692450
#+end_example




*** Target \(F_1(\tau) = P(T \le \tau, Delta=1)\) and \(F_2(\tau) = P(T \le \tau, Delta=2)\) simultaneously


#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory  
source("./simulation-contmle/load.R")    
(run3 <- contmle(dt2, #-- dataset
                 target=1:2, #-- go after cause 1 and cause 2 specific risks
                 iterative=FALSE, #-- use one-step tmle to target F1 and F2 separately
                 treat.effect="ate", #-- target the ate directly
                 tau=0.5, #-- time-point of interest
                 estimation=list("cause1"=list(fit="cox",
                                               model=Surv(time, delta==1)~A+L1.squared),
                                 "cens"=list(fit="cox",
                                             model=Surv(time, delta==0)~L1+L2+L3+A*L1),
                                 "cause2"=list(fit="cox",
                                               model=Surv(time, delta==2)~A+L1+L2+L3)                                         
                                 )
                 ))   
#+END_SRC

#+RESULTS[<2020-12-05 14:54:09> 012a9975f788300b80b8c724cbacaba9891ca294]:
#+begin_example
$init
$init$F1
             tau=0.5
init.est 0.007793466
init.se  0.040004181

$init$F2
             tau=0.5
init.est -0.09378281
init.se   0.03692451


$tmle
$tmle$F1
             tau=0.5
tmle.est 0.003542553
tmle.se  0.040002546

$tmle$F2
             tau=0.5
tmle.est -0.08624101
tmle.se   0.03692414
#+end_example



*** Target \(F_1(\tau) = P(T \le \tau, Delta=1)\) and \(F_2(\tau) = P(T \le \tau, Delta=2)\) simultaneously across multiple time-points


#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory  
source("./simulation-contmle/load.R")    
(run4 <- contmle(dt2, #-- dataset
                 target=1:2, #-- go after cause 1 and cause 2 specific risks
                 iterative=FALSE, #-- use one-step tmle to target F1 and F2 separately
                 treat.effect="ate", #-- target the ate directly
                 tau=c(0.3, 0.5), #-- time-point of interest
                 estimation=list("cause1"=list(fit="cox",
                                               model=Surv(time, delta==1)~A+L1.squared),
                                 "cens"=list(fit="cox",
                                             model=Surv(time, delta==0)~L1+L2+L3+A*L1),
                                 "cause2"=list(fit="cox",
                                               model=Surv(time, delta==2)~A+L1+L2+L3)                                         
                                 )
                 ))   
#+END_SRC

#+RESULTS[<2020-12-05 14:55:44> 32772981c10fa05779cf7bb6b98030273fb435f7]:
#+begin_example
$init
$init$F1
              tau=0.3     tau=0.5
init.est -0.001742215 0.007793466
init.se   0.028741879 0.040004181

$init$F2
             tau=0.3     tau=0.5
init.est -0.05149133 -0.09378281
init.se   0.02771378  0.03692451


$tmle
$tmle$F1
            tau=0.3     tau=0.5
tmle.est 0.01948492 0.003680884
tmle.se  0.02874492 0.040002053

$tmle$F2
             tau=0.3     tau=0.5
tmle.est -0.04689139 -0.08623811
tmle.se   0.02771312  0.03692375
#+end_example



** Code for simulation studies

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory 
source("./simulation-contmle/load.R") 
test1 <- run.fun(M=1, n=1000, competing.risk=TRUE, 
                 target=1, tau=0.5, 
                 setting=2,
                 censoring.informative=TRUE,
                 iterative=TRUE, 
                 no_cores=1)    
#+END_SRC

#+RESULTS[<2020-12-05 14:08:50> 9e5996ce7f558984c7edc4ca5bffcd428c502d2a]:
#+begin_example
[1] "m=1"
$`m=1`
$`m=1`$init
$`m=1`$init$F1
             tau=0.5
init.est -0.06945745
init.se   0.02777824


$`m=1`$km
$`m=1`$km$F1
           tau=0.5
km.est -0.03353986
km.se   0.02819749


$`m=1`$tmle
$`m=1`$tmle$F1
             tau=0.5
tmle.est -0.04757723
tmle.se   0.02778435
#+end_example



* 


* Overview

- [[https://github.com/helenecharlotte/Web-appendix-continuous-time-TMLE/#running-the-code][Running the code]]

- [[https://github.com/helenecharlotte/Web-appendix-continuous-time-TMLE/tree/main#making-of-tables-1-and-2][Making of Tables 1 and 2]]

 + [[https://github.com/helenecharlotte/Web-appendix-continuous-time-TMLE/#table-1][Table 1]]
 + [[https://github.com/helenecharlotte/Web-appendix-continuous-time-TMLE/#table-2][Table 2]]

- [[https://github.com/helenecharlotte/Web-appendix-continuous-time-TMLE#changing-the-sample-size-n][Changing the sample size (n)]] 

- [[https://github.com/helenecharlotte/Web-appendix-continuous-time-TMLE/#the-simulation-scenario][The simulation scenario]]

 + [[https://github.com/helenecharlotte/Web-appendix-continuous-time-TMLE#overall-description][Overall description]]
 + [[https://github.com/helenecharlotte/Web-appendix-continuous-time-TMLE#current-setting][Current setting of Tables 1 and 2]]
 + [[https://github.com/helenecharlotte/Web-appendix-continuous-time-TMLE#changing-the-current-setting][Changing the current setting]]



* Running the code

The following code uses one computing core to calculate the estimates
of conTMLE (and LTMLE) using a single simulated dataset. The code that
produces the empirical results of Table 1 and Table 2 of the
manuscript are shown longer down.

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory 
source("./examples/load.R")
K5.conTMLE <- runTMLE(K=5, # number of time points
                      n = 1000, # sample size
                      misspecify.init = FALSE, # if TRUE, the initial outcome model is misspecified (see manuscript)
                      seed=23, # control randomness of data simulation
                      M = 1, # number of simulations
                      no_cores=1) # number of computing cores
K5.conTMLE      
#+END_SRC

: 
: Estimating psi with TMLE based on observed data:
:    conTMLE.A0      se.A0  init.A0 conTMLE.A1      se.A1   init.A1
: 1:  0.5122824 0.02363591 0.512352  0.4153924 0.02281688 0.4048561




Our function =runLTMLE= applies =LTMLE= to data simulated from the
same data-generating distribution. 

#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory 
source("./examples/load.R")
K5.ltmle <- runLTMLE(K=5,
                     seed=23,
                     M=1, 
                     n=1000) 
K5.ltmle 
#+END_SRC

: 
: Estimating psi with LTMLE based on observed data:
:     ltmle.A0      sd.A0  ltmle.A1      sd.A1
: 1: 0.5110533 0.02429905 0.4148675 0.02307705



* Making of tables 1 and 2

** Table 1

We provide code that produces results for =K=5= and =K=30= for LTMLE
and our new method, conTMLE. The code in files [[examples/table1.R]] and
[[examples/table2.R]] generate the following results:


*** K=5
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
source("./examples/load.R") 
table1.K5.true <- readRDS(file="./examples/table1-K5-true.rds")
table1.K5.ltmle <- readRDS(file="./examples/table1-K5-ltmle.rds")
table1.K5.conTMLE <- readRDS(file="./examples/table1-K5-conTMLE.rds")
summary(object=table1.K5.ltmle,true=table1.K5.true)   
summary(object=table1.K5.conTMLE,true=table1.K5.true)   
#+END_SRC

#+begin_example
     LTMLE        A0       A1       psi
1     true  0.560078 0.424340  0.135737
2     mean  0.559614 0.424824  0.134790
3     bias -0.000463 0.000484 -0.000947
4       se  0.024448 0.023424  0.033858
5 coverage  0.949000 0.952000  0.941000
6      MSE  0.024488 0.023217  0.033704
   conTMLE         A0       A1     psi
1     true  0.5600776  0.42434 0.13574
2     mean  0.5600330  0.42302 0.13702
3     bias -0.0000446 -0.00132 0.00128
4       se  0.0236953  0.02305 0.03305
5 coverage  0.9400000  0.94500 0.94700
6      MSE  0.0244799  0.02318 0.03338
#+end_example


*** K=30
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
source("./examples/load.R")
table1.K30.true <- readRDS(file="./examples/table1-K30-true.rds")
table1.K30.ltmle <- readRDS(file="./examples/table1-K30-ltmle.rds")
table1.K30.conTMLE <- readRDS(file="./examples/table1-K30-conTMLE.rds")
summary(object=table1.K30.ltmle,true=table1.K30.true)  
summary(object=table1.K30.conTMLE,true=table1.K30.true)   
#+END_SRC

#+begin_example
     LTMLE        A0     A1      psi
1     true 0.6114444 0.4733  0.13811
2     mean 0.6114690 0.4757  0.13574
3     bias 0.0000246 0.0024 -0.00238
4       se 0.0362204 0.0356  0.05076
5 coverage 0.9730000 0.9650  0.97200
6      MSE 0.0348085 0.0343  0.04821
   conTMLE        A0      A1       psi
1     true  0.611444 0.47333  0.138113
2     mean  0.610929 0.47372  0.137208
3     bias -0.000515 0.00039 -0.000905
4       se  0.024992 0.02465  0.035105
5 coverage  0.953000 0.94200  0.956000
6      MSE  0.024627 0.02474  0.034110
#+end_example





*** K=50
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
source("./examples/load.R")
table1.K50.true <- readRDS(file="./examples/table1-K50-true.rds")
table1.K50.ltmle <- readRDS(file="./examples/table1-K50-ltmle.rds")
table1.K50.conTMLE <- readRDS(file="./examples/table1-K50-conTMLE.rds")
summary(object=table1.K50.ltmle,true=table1.K50.true)   
summary(object=table1.K50.conTMLE,true=table1.K50.true)     
#+END_SRC

#+begin_example
     LTMLE      A0      A1     psi
1     true 0.67314 0.52494 0.14820
2     mean 0.67690 0.52741 0.14948
3     bias 0.00376 0.00247 0.00128
4       se 0.03690 0.03705 0.05229
5 coverage 0.98200 0.98600 0.98600
6      MSE 0.02661 0.02802 0.03934
   conTMLE        A0       A1      psi
1     true  0.673141 0.524940  0.14820
2     mean  0.672635 0.525574  0.14706
3     bias -0.000506 0.000634 -0.00114
4       se  0.023630 0.024317  0.03391
5 coverage  0.944000 0.952000  0.95300
6      MSE  0.023897 0.024081  0.03464
#+end_example




** Table 2


*** K=30 (correctly specified initial estimator)
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
source("./examples/load.R") 
table2.K30.true <- readRDS(file="./examples/table1-K30-true.rds")
table2.K30 <- readRDS(file="./examples/table1-K30-conTMLE.rds")
summary(object=table2.K30,true=table2.K30.true,init=TRUE)
summary(object=table2.K30,true=table2.K30.true)    
#+END_SRC

#+begin_example
  Initial estimate       A0        A1       psi
1             true  0.61144  0.473331  0.138113
2             mean  0.61059  0.472922  0.137671
3             bias -0.00085 -0.000409 -0.000442
   conTMLE        A0      A1       psi
1     true  0.611444 0.47333  0.138113
2     mean  0.610929 0.47372  0.137208
3     bias -0.000515 0.00039 -0.000905
4       se  0.024992 0.02465  0.035105
5 coverage  0.953000 0.94200  0.956000
6      MSE  0.024627 0.02474  0.034110
#+end_example


*** K=30 (misspecified initial estimator)

#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
source("./examples/load.R")
table2.K30.true <- readRDS(file="./examples/table1-K30-true.rds")
table2.K30.misspecified <- readRDS(file="./examples/table2-K30-conTMLE.rds")
summary(object=table2.K30.misspecified,true=table2.K30.true,init=TRUE) 
summary(object=table2.K30.misspecified,true=table2.K30.true)    
#+END_SRC

#+begin_example
  Initial estimate      A0      A1     psi
1             true  0.6114 0.47333  0.1381
2             mean  0.5935 0.47448  0.1191
3             bias -0.0179 0.00115 -0.0191
   conTMLE        A0        A1      psi
1     true  0.611444 0.4733314  0.13811
2     mean  0.611025 0.4734016  0.13762
3     bias -0.000419 0.0000702 -0.00049
4       se  0.024957 0.0246859  0.03510
5 coverage  0.944000 0.9580000  0.93600
6      MSE  0.026123 0.0236517  0.03542
#+end_example




*** K=50 (correctly specified initial estimator)
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
source("./examples/load.R")
table2.K50.true <- readRDS(file="./examples/table1-K50-true.rds")
table2.K50 <- readRDS(file="./examples/table1-K50-conTMLE.rds")
summary(object=table2.K50,true=table2.K50.true,init=TRUE)
summary(object=table2.K50,true=table2.K50.true)      
#+END_SRC

#+begin_example
  Initial estimate        A0      A1      psi
1             true  0.673141 0.52494  0.14820
2             mean  0.672324 0.52520  0.14712
3             bias -0.000818 0.00026 -0.00108
   conTMLE        A0       A1      psi
1     true  0.673141 0.524940  0.14820
2     mean  0.672635 0.525574  0.14706
3     bias -0.000506 0.000634 -0.00114
4       se  0.023630 0.024317  0.03391
5 coverage  0.944000 0.952000  0.95300
6      MSE  0.023897 0.024081  0.03464
#+end_example


*** K=50 (misspecified initial estimator)
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
source("./examples/load.R")
table2.K50.true <- readRDS(file="./examples/table1-K50-true.rds")
table2.K50.misspecified <- readRDS(file="./examples/table2-K50-conTMLE.rds")
summary(object=table2.K50.misspecified,true=table2.K50.true,init=TRUE)
summary(object=table2.K50.misspecified,true=table2.K50.true)     
#+END_SRC

#+begin_example
  Initial estimate      A0       A1     psi
1             true  0.6731  0.52494  0.1482
2             mean  0.6549  0.52002  0.1348
3             bias -0.0183 -0.00492 -0.0134
   conTMLE        A0         A1      psi
1     true  0.673141  0.5249402  0.14820
2     mean  0.672230  0.5249091  0.14732
3     bias -0.000911 -0.0000311 -0.00088
4       se  0.023627  0.0243455  0.03393
5 coverage  0.952000  0.9490000  0.95500
6      MSE  0.023576  0.0241819  0.03324
#+end_example




*** K=100 (correctly speficied initial estimator)
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
source("./examples/load.R")
table2.K100.true <- readRDS(file="./examples/table1-K100-true.rds")
table2.K100 <- readRDS(file="./examples/table1-K100-conTMLE.rds")
summary(object=table2.K100,true=table2.K100.true,init=TRUE)
summary(object=table2.K100,true=table2.K100.true)      
#+END_SRC


#+begin_example
  Initial estimate        A0       A1       psi
1             true  0.620108 0.490575  0.129533
2             mean  0.619557 0.490732  0.128824
3             bias -0.000551 0.000158 -0.000709
   conTMLE         A0       A1       psi
1     true  0.6201078 0.490575  0.129533
2     mean  0.6200236 0.491328  0.128696
3     bias -0.0000842 0.000753 -0.000837
4       se  0.0232213 0.024145  0.033499
5 coverage  0.9420000 0.954000  0.945000
6      MSE  0.0247149 0.023937  0.034581
#+end_example



*** K=100 (misspecified initial estimator)
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
source("./examples/load.R")
table2.K100.true <- readRDS(file="./examples/table1-K100-true.rds")
table2.K100.misspecified <- readRDS(file="./examples/table2-K100-conTMLE.rds")
summary(object=table2.K100.misspecified,true=table2.K100.true,init=TRUE)
summary(object=table2.K100.misspecified,true=table2.K100.true)      
#+END_SRC

#+begin_example
  Initial estimate      A0       A1      psi
1             true  0.6201  0.49057  0.12953
2             mean  0.6108  0.48277  0.12804
3             bias -0.0093 -0.00781 -0.00149
   conTMLE       A0        A1       psi
1     true  0.62011  0.490575  0.129533
2     mean  0.61895  0.489643  0.129311
3     bias -0.00115 -0.000931 -0.000222
4       se  0.02329  0.024209  0.033595
5 coverage  0.93600  0.946000  0.944000
6      MSE  0.02404  0.024469  0.033991
#+end_example



* Changing the sample size (n)

We here fix =K30= and decrease the sample size =n=. Note that the
smaller =n= is, the fewer events are observed at each timepoint. 

** n=1000

#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
source("./examples/load.R") 
table1.K30.true <- readRDS(file="./examples/table1-K30-true.rds")
table1.K30.n1000.ltmle <- readRDS(file="./examples/table1-K30-ltmle.rds")
table1.K30.n1000.conTMLE <- readRDS(file="./examples/table1-K30-conTMLE.rds")
summary(object=table1.K30.n1000.ltmle,true=table1.K30.true)    
summary(object=table1.K30.n1000.conTMLE,true=table1.K30.true)    
#+END_SRC

#+begin_example
     LTMLE        A0     A1      psi
1     true 0.6114444 0.4733  0.13811
2     mean 0.6114690 0.4757  0.13574
3     bias 0.0000246 0.0024 -0.00238
4       se 0.0362204 0.0356  0.05076
5 coverage 0.9730000 0.9650  0.97200
6      MSE 0.0348085 0.0343  0.04821
   conTMLE        A0      A1       psi
1     true  0.611444 0.47333  0.138113
2     mean  0.610929 0.47372  0.137208
3     bias -0.000515 0.00039 -0.000905
4       se  0.024992 0.02465  0.035105
5 coverage  0.953000 0.94200  0.956000
6      MSE  0.024627 0.02474  0.034110
#+end_example

** n=500
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
source("./examples/load.R") 
table1.K30.true <- readRDS(file="./examples/table1-K30-true.rds")
table1.K30.n500.ltmle <- readRDS(file="./examples/table1-K30-n500-ltmle.rds")
table1.K30.n500.conTMLE <- readRDS(file="./examples/table1-K30-n500-conTMLE.rds")
summary(object=table1.K30.n500.ltmle,true=table1.K30.true)      
summary(object=table1.K30.n500.conTMLE,true=table1.K30.true)   
#+END_SRC

#+begin_example
     LTMLE      A0     A1       psi
1     true 0.61144 0.4733  0.138113
2     mean 0.61590 0.4784  0.137468
3     bias 0.00446 0.0051 -0.000645
4       se 0.04730 0.0460  0.066001
5 coverage 0.98700 0.9720  0.984000
6      MSE 0.03963 0.0415  0.056354
   conTMLE        A0       A1      psi
1     true  0.611444  0.47333 0.138113
2     mean  0.610856  0.47201 0.138850
3     bias -0.000588 -0.00133 0.000737
4       se  0.035391  0.03481 0.049639
5 coverage  0.956000  0.94700 0.951000
6      MSE  0.034403  0.03445 0.048263
#+end_example




** n=200
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
source("./examples/load.R") 
table1.K30.true <- readRDS(file="./examples/table1-K30-true.rds")
table1.K30.n200.ltmle <- readRDS(file="./examples/table1-K30-n200-ltmle.rds")
table1.K30.n200.conTMLE <- readRDS(file="./examples/table1-K30-n200-conTMLE.rds")
summary(object=table1.K30.n200.ltmle,true=table1.K30.true)      
summary(object=table1.K30.n200.conTMLE,true=table1.K30.true)    
#+END_SRC

#+begin_example
     LTMLE     A0     A1      psi
1     true 0.6114 0.4733  0.13811
2     mean 0.6216 0.4849  0.13672
3     bias 0.0101 0.0115 -0.00139
4       se 0.1298 0.1227  0.17865
5 coverage 0.9960 0.9930  0.99900
6      MSE 0.0556 0.0556  0.07982
   conTMLE     A0       A1      psi
1     true 0.6114 0.473331 0.138113
2     mean 0.6128 0.474259 0.138582
3     bias 0.0014 0.000928 0.000469
4       se 0.0556 0.055231 0.078336
5 coverage 0.9490 0.936000 0.940000
6      MSE 0.0556 0.056995 0.079472
#+end_example


* The simulation scenario


** Overall description
 
We consider a setting where subjects of a population are followed for
=K= days of follow-up time. On any given day, any subject may change
treatment, covariates, may be lost to follow-up (right-censored) or
may experience the outcome of interest. Both the treatment and the
censoring mechanisms are subject to time-dependent confounding.  The
data are simulated such that the number of monitoring times per
subject are approximately the same across different =K=. Thus, the
larger =K= is, the less events are observed at single monitoring
times.

** Current setting


The current simulation setting is defined by the function =sim.data=
(see file [[R/sim-data.R]]). The way we simulate the data is best
described with the following example. Baseline covariates =L0= and
treatment =A0= are generated first. Followup values of both processes
(=Lk=, =Ak=) as well as censoring (=Ck=) and outcome (=Yk=) processes
are then generated in a loop through the values =1:K=. The value
=Yk+1= contains the status of the outcome at the end of followup. The
=sim.data= function outputs the data in wide format; this is the
format needed for =ltmle=.

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
sim.data(n=10,K=3,seed=3)      
#+END_SRC

#+begin_example
    id        L0 A0 Y1 dN.L1 L1 dN.A1 A1 C1 Y2 dN.L2 L2 dN.A2 A2 C2 Y3 dN.L3 L3 dN.A3 A3 C3 Y4
 1:  1 0.8333333  0  0     0  0     0  0  0  0     1  0     0  0  0  0     0  0     0  0  0  0
 2:  2 0.3333333  1  0     0  0     1  1  0  0     0  0     0  1  0  0     0  0     1  1  0  0
 3:  3 0.6666667  0  0     1  1     0  0  0  0     0  1     0  0  0  0     0  1     0  0  0  0
 4:  4 0.6666667  0  0     0  0     1  1  0  0     0  0     0  1  0  0     1  0     0  1  0  0
 5:  5 0.3333333  1  0     0  0     0  1  0  0     1  1     0  1  0  0     1  1     1  0  0  0
 6:  6 0.5000000  0  0     0  0     1  0  0  1     1  1     1  0  0  1     1  1     0  0  0  1
 7:  7 0.6666667  1  0     0  0     0  1  0  0     0  0     1  1  0  0     0  0     1  1  0  0
 8:  8 0.3333333  0  1     0  0     1  0  0  1     0  0     1  0  0  1     1  1     1  0  0  1
 9:  9 0.8333333  1  0     0  0     0  1  0  0     0  0     1  1  0  0     1  0     0  1  0  0
10: 10 0.3333333  0  0     0  0     0  0  0  0     0  0     0  0  0  0     0  0     1  0  0  0
#+end_example

Our estimation function =conTMLE= transform the data to long format
which is more suitable when =K= is large since we only need a row at
the monitoring times:


#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
print.long.format(sim.data(n=5,K=50,seed=10))         
#+END_SRC

#+begin_example
    id  k        L0 A0 A C L Y dN.A dN.L
 1:  1 12 0.5000000  1 1 0 1 0    0    1
 2:  1 29 0.5000000  1 1 0 0 0    0    1
 3:  1 33 0.5000000  1 1 0 0 0    1    0
 4:  1 38 0.5000000  1 1 0 0 0    1    0
 5:  1 46 0.5000000  1 1 0 0 0    0    1
 6:  1 51 0.5000000  1 1 0 0 0    0    0
 7:  2  5 0.1666667  1 1 0 0 0    1    0
 8:  2 13 0.1666667  1 1 0 0 0    1    0
 9:  2 15 0.1666667  1 1 0 1 0    0    1
10:  2 21 0.1666667  1 1 0 1 0    1    0
11:  2 22 0.1666667  1 1 0 1 1    0    0
12:  3 15 0.3333333  0 0 0 1 0    0    1
13:  3 25 0.3333333  0 0 0 1 0    1    0
14:  3 36 0.3333333  0 0 0 1 0    1    0
15:  3 43 0.3333333  0 0 0 1 1    0    0
16:  4  4 0.6666667  1 1 0 0 0    1    0
17:  4 11 0.6666667  1 1 0 1 0    1    1
18:  4 18 0.6666667  1 1 0 1 1    0    0
19:  5  7 1.0000000  0 0 0 0 1    0    0
#+end_example


In our current setting, all dependencies between the processes are
limited to the previous values and the baseline values. Note also that
the specific parameter constellation depends on the value of =K=
(needed for the number of monitoring times per subject to be
approximately the same across different =K=).


#+BEGIN_SRC R  :results output raw drawer  :exports code  :session *R* :cache yes  
# Step 1: baseline covariate 
L0 <- sample(1:6, n, replace=1000)/6
# Baseline treatment
form.A0 <- function(L0){
    cbind(-0.1+0.25*L0)
}
# Covariate monitoring process: time of current measurement 
form.dN.L <- function(L0, dN.L.prev, L.prev, A.prev){
    -0.2-0.05*K-0.025*(K>7)-0.25*dN.L.prev-0.15*L0-0.1*(A.prev==1)+0.3*L.prev
}
# Treatment monitoring process, time of current measurement 
form.dN.A <- function(L0, dN.A.prev, L.prev, A.prev){
    -0.75-0.05*K-0.42*dN.A.prev+0.15*L0+0.3*(A.prev==2)+0.4*(A.prev==1)-0.25*L.prev
}
# Covariate values at monitoring times
form.L <- function(L0, L.prev, A.prev, A0){
    0.5-0.4*A0+0.15*L0-0.25*(A.prev==1)+0.4*L.prev
}
# Treatment values at monitoring times
form.A <- function(L0, L.prev, A.prev, A0){
    cbind(-2.1+(1-A0)*1.7+(1-A.prev)*1.8-A.prev*1.7+L.prev*2.1)
}
# Censoring process
form.C <- function(L0, L.prev, A.prev, A0){
    -3.95+(K>40)*5-0.4*K^{2/3}-0.24*(K>2 & K<=4)-0.4*(K>4 & K<=9)
    -(K>9)*0.4*K^{1/5}+0.2*(K>25)*K^{1/4}
    +0.1*L0+0.2*(A0==1)+0.9*(A0==2)+2.15*L.prev
}
# Outcome process
form.Y <- function(L0, L.prev, A.prev, A0, dN.A.prev) {
    -1.1-0.33*K/3*(K>2 & K<=4)-0.25*K^{2/3}-0.25*(K>4 & K<=9)-
        (K>25 & K<45)*0.3*K^{1/5}-
            (K>75)*0.31+(K>85)*0.2-
            (K>25 & K<75)*0.5*K^{1/5}+0.6*(K>25)*K^{1/4}-0.25*A.prev+
            0.4*L.prev-0.25*A0+0.35*L.prev*A0+(K>75)*0.1*A0+(K>85)*0.01*A0
}
#+END_SRC

** Changing the current setting



We have to be careful when changing the simulation setting. For
example, just changing the distribution of =A= given the history (does
not change the true values of the target parameter, but) may result in
positivity violation as in the following (as signaled by the warning
message):


#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
source("./examples/load.R")
treatment.formula <- function(L0, L.prev, A.prev, A0){
        cbind(-5.5*(1-A0))
    }  
compute.true(K=5,n=100000,B=1,seed=9,form.A=treatment.formula,progress.bar=-1) 
# dt <- sim.data(n=200,K=3,seed=3,form.Y=outcome.formula)
test1 <- runTMLE(K=5, # number of time points
                 n = 200, # sample size
                 misspecify.init = FALSE, # if TRUE, the initial outcome model is misspecified (see manuscript)
                 seed=3, # control randomness of data simulation
                 M = 1, # number of simulations
                 no_cores=1,
                 form.A=treatment.formula,progress.bar=-1)
test1     
#+END_SRC

#+begin_example
psi0.A0 psi0.A1 
0.56194 0.42764

Estimating psi with TMLE based on observed data:

Warning message:
In conTMLE(dt, targeting = 2, smooth.initial = TRUE, max.iter = max.iter,  :
  not much support for regime A=0 (13%); beware of positivity issues
   conTMLE.A0     se.A0   init.A0 conTMLE.A1      se.A1   init.A1
1:  0.5294796 0.0369986 0.5642535   0.289432 0.05778478 0.3153624
#+end_example



The positivity violations result in considerably inaccurate
inference. Here we have repeated the simulations above =M=1000= times
to illustrate this:

#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
source("./examples/load.R") 
table1.K5.true <- readRDS(file="./examples/table1-K5-true.rds")
table1.K5.conTMLE <- readRDS(file="./examples/positivity-violation-table1-K5-conTMLE.rds") 
summary(object=table1.K5.conTMLE,true=table1.K5.true)  
#+END_SRC

:    conTMLE       A0      A1      psi
: 1     true  0.55999 0.42451  0.13548
: 2     mean  0.55420 0.42484  0.12936
: 3     bias -0.00579 0.00033 -0.00612
: 4       se  0.07496 0.02275  0.07834
: 5 coverage  0.58800 0.95400  0.62800
: 6      MSE  0.13922 0.02276  0.14147



In the following, we instead as an example remove the direct effect
(note that there is still an effect through the =L= process) of the
treatment on outcome:

#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
source("./examples/load.R")
outcome.formula <- function(L0, L.prev, A.prev, A0, dN.A.prev) {
  return(-2 # intercept
         -0*A.prev # treatment effect
         + 0.4*L.prev  # covariate effect
         +0*A0 # baseline treatment effect
         )
}
compute.true(K=5,n=100000,B=1,seed=8,form.Y=outcome.formula,progress.bar=-1)
test2 <- runTMLE(K=5, # number of time points
                n = 200, # sample size
                misspecify.init = FALSE, # if TRUE, the initial outcome model is misspecified (see manuscript)
                seed=3, # control randomness of data simulation
                M = 1, # number of simulations
                no_cores=1,
                form.Y=outcome.formula,progress.bar=-1) 
test2 
#+END_SRC

: psi0.A0 psi0.A1 
: 0.58832 0.57308
: 
: Estimating psi with TMLE based on observed data:
:    conTMLE.A0      se.A0   init.A0 conTMLE.A1      se.A1  init.A1
: 1:  0.5768492 0.05338095 0.5877601  0.5846994 0.05433202 0.555641




*  Dependencies 

** R-version

The code has been tested with the following R version

#+BEGIN_SRC R  :results output :exports results  :session *R* :cache yes  
version
#+END_SRC

#+begin_example
               _                           
platform       x86_64-pc-linux-gnu         
arch           x86_64                      
os             linux-gnu                   
system         x86_64, linux-gnu           
status                                     
major          4                           
minor          0.2                         
year           2020                        
month          06                          
day            22                          
svn rev        78730                       
language       R                           
version.string R version 4.0.2 (2020-06-22)
nickname       Taking Off Again
#+end_example

and the following package versions:

#+BEGIN_SRC R  :results output raw drawer  :exports results  :session *R* :cache yes  
pp <- c("data.table", "zoo", "stringr", "ltmle", "parallel", "foreach", "doParallel")
Publish::org(data.table(Package=pp,Version=sapply(pp,function(x) as.character(packageVersion(x)))))
#+END_SRC

:results:
| Package    | Version |
|------------+---------|
| data.table |  1.13.0 |
| zoo        |   1.8.8 |
| stringr    |   1.4.0 |
| ltmle      |   1.2.0 |
| parallel   |   4.0.2 |
| foreach    |   1.5.0 |
| doParallel |  1.0.15 |
:end:

